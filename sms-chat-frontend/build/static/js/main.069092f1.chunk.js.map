{"version":3,"sources":["Context.js","components/Video/Video.jsx","components/ID/ID.jsx","components/Call/call.jsx","components/Header/Header.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","VideoPlayer","useContext","className","item","xs","md","playsInline","muted","ref","autoPlay","Sidebar","idToCall","setIdToCall","autoComplete","onChange","e","target","text","onClick","Notifications","Header","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.069092f1.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\nconst socket = io('https://video-chat-backend-v055.onrender.com');\n\nconst ContextProvider = ({ children }) => {\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((currentStream) => {\n        setStream(currentStream);\n\n        myVideo.current.srcObject = currentStream;\n      });\n\n    socket.on('me', (id) => setMe(id));\n\n    socket.on('callUser', ({ from, name: callerName, signal }) => {\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n\n    const peer = new Peer({ initiator: false, trickle: false, stream });\n\n    peer.on('signal', (data) => {\n      socket.emit('answerCall', { signal: data, to: call.from });\n    });\n\n    peer.on('stream', (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    peer.signal(call.signal);\n\n    connectionRef.current = peer;\n  };\n\n  const callUser = (id) => {\n    const peer = new Peer({ initiator: true, trickle: false, stream });\n\n    peer.on('signal', (data) => {\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name,\n      });\n    });\n\n    peer.on('stream', (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    socket.on('callAccepted', (signal) => {\n      setCallAccepted(true);\n\n      peer.signal(signal);\n    });\n\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n\n    connectionRef.current.destroy();\n\n    window.location.reload();\n  };\n\n  return (\n    <SocketContext.Provider\n      value={{\n        call,\n        callAccepted,\n        myVideo,\n        userVideo,\n        stream,\n        name,\n        setName,\n        callEnded,\n        me,\n        callUser,\n        leaveCall,\n        answerCall,\n      }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport { ContextProvider, SocketContext };\n","import React, { useContext } from 'react';\nimport { SocketContext } from '../../Context';\nimport './Video.css';\n\nconst VideoPlayer = () => {\n  const { callAccepted, myVideo, userVideo, callEnded, stream } = useContext(SocketContext);\n\n  return (\n    <div className=\"video\">\n      {stream && (\n        <div>\n          <div item xs={12} md={6}>\n            <video className=\"player\" playsInline muted ref={myVideo} autoPlay />\n          </div>\n        </div>\n      )}\n      {callAccepted && !callEnded && (\n        <div>\n          <div>\n            <video className=\"player\" playsInline ref={userVideo} autoPlay />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n","import React, { useState, useContext } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport './ID.css';\nimport { SocketContext } from '../../Context';\n\nconst Sidebar = ({ children }) => {\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState('');\n\n  return (\n    <div>\n      <div>\n        <form autoComplete=\"off\">\n          <div className=\"form\">\n            <div>\n              <h3>Enter Name</h3>\n              <input value={name} onChange={(e) => setName(e.target.value)} />\n              <CopyToClipboard text={me}>\n                <div className=\"button\">Copy ID</div>\n              </CopyToClipboard>\n            </div>\n            <div>\n              <h3>Meeting ID</h3>\n              <input\n                value={idToCall}\n                onChange={(e) => setIdToCall(e.target.value)}\n              />\n              {callAccepted && !callEnded ? (\n                <div className=\"button decline\" onClick={leaveCall}>Hang Up</div>\n              ) : (\n                <div className=\"button\" onClick={() => callUser(idToCall)}>Call</div>\n              )}\n            </div>\n          </div>\n        </form>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useContext } from 'react';\nimport './call.css';\nimport { SocketContext } from '../../Context';\n\nconst Notifications = () => {\n  const { answerCall, call, callAccepted, leaveCall } = useContext(SocketContext);\n\n  return (\n    <>\n      {call.isReceivingCall && !callAccepted && (\n        <div className=\"call\">\n          <h3>Call from {call.name ? call.name : 'unknown'}</h3>\n          <div className=\"button\" onClick={answerCall}>Answer</div>\n          <div className=\"button decline\" onClick={leaveCall}>Decline</div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Notifications;\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Lets Meet</h1>\r\n      <a href=\"https://sms-home.netlify.app/dashboard\">\r\n        <h1>Home</h1>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport VideoPlayer from './components/Video/Video';\nimport ID from './components/ID/ID';\nimport Call from './components/Call/call';\nimport Header from './components/Header/Header';\n\nexport default function App() {\n  return (\n    <div>\n      <Header />\n      <ID>\n        <Call />\n      </ID>\n      <VideoPlayer />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { ContextProvider } from './Context';\n\nimport './App.css';\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}